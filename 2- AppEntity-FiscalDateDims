create or replace view APPLICATION_ENTITY_DB.PUBLIC.AE_FISCALDATEDIMS(
	CALENDARDATE,
	DAYOFPERIOD_NUMBER,
	DAYOFWEEK_NUMBER,
	DAYOFYEAR_NUMBER,
	DAYOFQUARTER_NUMBER,
	WEEK_KEY,
	WEEKOFYEAR_NUMBER,
	WEEKOFQUARTER_NUMBER,
	WEEKOFPERIOD_NUMBER,
	WEEK_START,
	WEEK_END,
	PERIOD_KEY,
	PERIOD_NUMBER,
	PERIOD_START,
	PERIOD_END,
	QUARTER_KEY,
	QUARTER_NUMBER,
	QUARTER_NAME,
	QUARTER_START,
	QUARTER_END,
	ISBKCHOLIDAY,
	YEAR_NUMBER
) COMMENT='Comprehensive fiscal date dim view'
 as
/*
* ---------------------------------------------------------------------------------------------------------
* Created         Created By          Description
* ---------------------------------------------------------------------------------------------------------
* 11/23/2022      Kevin Bailey        Initial creation
*
* Description
*   View calculates all date partitions needed in downstream Tableau analysis
*   based on the fiscal calendar. The date partitions mirror that of the gregorian
*   date dim tables and views
*/
WITH MAIN AS 
(   SELECT   CALENDARDATE
            ,TO_NUMBER( FISCALYEAR || LPAD( FISCALPERIOD, 2, 0 ) ) AS PERIOD_KEY
            ,CASE 
                WHEN FISCALPERIOD >= 1 AND FISCALPERIOD <= 3 THEN 1
                WHEN FISCALPERIOD >= 4 AND FISCALPERIOD <= 6 THEN 2
                WHEN FISCALPERIOD >= 7 AND FISCALPERIOD <= 9 THEN 3
                WHEN FISCALPERIOD >= 10 AND FISCALPERIOD <= 12 THEN 4
             END AS QUARTER
            ,TO_NUMBER( FISCALYEAR || LPAD( 
                        CASE 
                            WHEN FISCALPERIOD >= 1 AND FISCALPERIOD <= 3 THEN 1
                            WHEN FISCALPERIOD >= 4 AND FISCALPERIOD <= 6 THEN 2
                            WHEN FISCALPERIOD >= 7 AND FISCALPERIOD <= 9 THEN 3
                            WHEN FISCALPERIOD >= 10 AND FISCALPERIOD <= 12 THEN 4
                         END, 2, 0 ) ) AS QUARTER_KEY
            ,FISCALPERIOD
            ,FISCALYEAR
            ,ISBKCHOLIDAY
    FROM    TIDY_DB.FLATFILES_DBO.FISCALDATEDIMS AS F ),
DAYCALCS AS
// CTE adds window functions for day calculations
(   SELECT   CALENDARDATE
            ,ROW_NUMBER() OVER( PARTITION BY TO_CHAR( FISCALYEAR ) || LPAD( FISCALPERIOD, 2, 0 )
                                ORDER BY CALENDARDATE ASC ) AS DAYOFPERIOD_NUMBER
            ,MOD( ROW_NUMBER() OVER( ORDER BY CALENDARDATE ASC ) - 1, 7 ) + 1 AS DAYOFWEEK_NUMBER
            ,ROW_NUMBER() OVER( PARTITION BY QUARTER_KEY
                                ORDER BY CALENDARDATE ASC ) AS DAYOFQUARTER_NUMBER
            ,ROW_NUMBER() OVER( PARTITION BY FISCALYEAR
                                ORDER BY CALENDARDATE ASC ) AS DAYOFYEAR_NUMBER
    FROM    MAIN AS M /*TIDY_DB.FLATFILES_DBO.FISCALDATEDIMS AS F*/ ),
WEEKCALCS AS 
// CTD adds window functions around calculating week fields - requires
// DAYCALCS CTE window function result,
(   SELECT   M.CALENDARDATE
            ,TO_NUMBER( M.FISCALYEAR ||
                        LPAD( ROW_NUMBER() OVER( PARTITION BY D.DAYOFWEEK_NUMBER, M.FISCALYEAR
                                        ORDER BY M.CALENDARDATE ASC ), 2, 0 ) ) AS WEEK_KEY
            ,ROW_NUMBER() OVER( PARTITION BY D.DAYOFWEEK_NUMBER, FISCALYEAR
                                    ORDER BY M.CALENDARDATE ASC ) AS WEEKOFYEAR_NUMBER
            ,ROW_NUMBER() OVER( PARTITION BY D.DAYOFWEEK_NUMBER, FISCALYEAR, FISCALPERIOD
                                    ORDER BY M.CALENDARDATE ASC ) AS WEEKOFPERIOD_NUMBER
    FROM    MAIN AS M
            INNER JOIN DAYCALCS AS D ON M.CALENDARDATE = D.CALENDARDATE
    ORDER BY
            M.CALENDARDATE ),
WEEK_STARTS AS 
// CTE to calculate beginning dates for fiscal weeks
(   SELECT DISTINCT
             W.WEEK_KEY
            ,W.CALENDARDATE AS WEEK_START
    FROM    WEEKCALCS AS W
            INNER JOIN DAYCALCS AS D ON W.CALENDARDATE = D.CALENDARDATE
    WHERE   D.DAYOFWEEK_NUMBER = 1 ),
WEEK_ENDINGS AS 
(   SELECT DISTINCT
             W.WEEK_KEY
            ,W.CALENDARDATE AS WEEK_END
    FROM    WEEKCALCS AS W
            INNER JOIN DAYCALCS AS D ON W.CALENDARDATE = D.CALENDARDATE
    WHERE   D.DAYOFWEEK_NUMBER = 7 ),
PERIOD_ENDPOINTS AS
// CTE to calculate beginning & end dates for fiscal periods
(
    SELECT   M.PERIOD_KEY
            ,MIN( CALENDARDATE ) AS PERIOD_START
            ,MAX( CALENDARDATE ) AS PERIOD_END
    FROM    MAIN AS M
    GROUP BY
            M.PERIOD_KEY ),
QUARTER_ENDPOINTS AS 
// CTE to calculate beginning & end dates for fiscal quarters
(
    SELECT   M.QUARTER_KEY
            ,MIN( M.CALENDARDATE ) AS QUARTER_START
            ,MAX( M.CALENDARDATE ) AS QUARTER_END
    FROM    MAIN AS M
    GROUP BY M.QUARTER_KEY
)
/***** Final select statement *****/
SELECT   M.CALENDARDATE
        ,D.DAYOFPERIOD_NUMBER
        ,D.DAYOFWEEK_NUMBER
        ,D.DAYOFYEAR_NUMBER
        ,D.DAYOFQUARTER_NUMBER
        ,W.WEEK_KEY
        ,W.WEEKOFYEAR_NUMBER
        ,CASE
            WHEN DAYOFPERIOD_NUMBER BETWEEN 1 AND 7 THEN 1
            WHEN DAYOFPERIOD_NUMBER BETWEEN 8 AND 14 THEN 2
            WHEN DAYOFPERIOD_NUMBER BETWEEN 15 AND 21 THEN 3
            WHEN DAYOFPERIOD_NUMBER BETWEEN 22 AND 28 THEN 4
            WHEN DAYOFPERIOD_NUMBER BETWEEN 29 AND 35 THEN 5
            WHEN DAYOFPERIOD_NUMBER BETWEEN 36 AND 42 THEN 6
            WHEN DAYOFPERIOD_NUMBER BETWEEN 43 AND 49 THEN 7
            WHEN DAYOFPERIOD_NUMBER BETWEEN 50 AND 56 THEN 8
            WHEN DAYOFPERIOD_NUMBER BETWEEN 57 AND 63 THEN 9
            WHEN DAYOFPERIOD_NUMBER BETWEEN 64 AND 70 THEN 10
            WHEN DAYOFPERIOD_NUMBER BETWEEN 71 AND 77 THEN 11
            WHEN DAYOFPERIOD_NUMBER BETWEEN 78 AND 84 THEN 12
            WHEN DAYOFPERIOD_NUMBER BETWEEN 85 AND 91 THEN 13
            WHEN DAYOFPERIOD_NUMBER BETWEEN 92 AND 98 THEN 14                
         END AS WEEKOFQUARTER_NUMBER
        ,W.WEEKOFPERIOD_NUMBER
        ,WS.WEEK_START
        ,WE.WEEK_END
        ,M.PERIOD_KEY
        ,M.FISCALPERIOD AS PERIOD_NUMBER
        ,PE.PERIOD_START
        ,PE.PERIOD_END
        ,M.QUARTER_KEY
        ,M.QUARTER AS QUARTER_NUMBER
        ,'Q' || LPAD( M.QUARTER, 2, 0 ) AS QUARTER_NAME
        ,QE.QUARTER_START
        ,QE.QUARTER_END
        ,M.ISBKCHOLIDAY
        ,M.FISCALYEAR AS YEAR_NUMBER
FROM    MAIN AS M
        INNER JOIN DAYCALCS AS D ON M.CALENDARDATE = D.CALENDARDATE
        INNER JOIN WEEKCALCS AS W ON M.CALENDARDATE = W.CALENDARDATE
        INNER JOIN WEEK_STARTS AS WS ON W.WEEK_KEY = WS.WEEK_KEY
        INNER JOIN WEEK_ENDINGS AS WE ON W.WEEK_KEY = WE.WEEK_KEY
        INNER JOIN PERIOD_ENDPOINTS AS PE ON M.PERIOD_KEY = PE.PERIOD_KEY
        INNER JOIN QUARTER_ENDPOINTS AS QE ON M.QUARTER_KEY = QE.QUARTER_KEY;
