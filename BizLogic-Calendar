create or replace view BUSINESS_LOGIC_DB.PUBLIC.BL_CALENDAR_MASTER(
	CALENDARDATE,
	CALENDAR_DAYOFWEEK_NUMBER,
	CALENDAR_DAYOFMONTH_NUMBER,
	CALENDAR_DAYOFQUARTER_NUMBER,
	CALENDAR_DAYOFYEAR_NUMBER,
	CALENDAR_WEEK_KEY,
	CALENDAR_WEEKOFMONTH_NUMBER,
	CALENDAR_WEEKOFQUARTER_NUMBER,
	CALENDAR_WEEKOFYEAR_NUMBER,
	CALENDAR_WEEK_START,
	CALENDAR_WEEK_END,
	CALENDAR_MONTH_KEY,
	CALENDAR_MONTH_NUMBER,
	CALENDAR_MONTH_SHORTNAME,
	CALENDAR_MONTH_LONGNAME,
	CALENDAR_MONTH_START,
	CALENDAR_MONTH_END,
	CALENDAR_QUARTER_KEY,
	CALENDAR_QUARTER_NUMBER,
	CALENDAR_QUARTER_NAME,
	CALENDAR_QUARTER_START,
	CALENDAR_QUARTER_END,
	CALENDAR_YEAR_NUMBER,
	FISCAL_DAYOFWEEK_NUMBER,
	FISCAL_DAYOFPERIOD_NUMBER,
	FISCAL_DAYOFQUARTER_NUMBER,
	FISCAL_DAYOFYEAR_NUMBER,
	FISCAL_WEEK_KEY,
	FISCAL_WEEKOFPERIOD_NUMBER,
	FISCAL_WEEKOFQUARTER_NUMBER,
	FISCAL_WEEKOFYEAR_NUMBER,
	FISCAL_WEEK_START,
	FISCAL_WEEK_END,
	FISCAL_PERIOD_KEY,
	FISCAL_PERIOD_NUMBER,
	FISCAL_PERIOD_START,
	FISCAL_PERIOD_END,
	FISCAL_QUARTER_KEY,
	FISCAL_QUARTER_NUMBER,
	FISCAL_QUARTER_NAME,
	FISCAL_QUARTER_START,
	FISCAL_QUARTER_END,
	FISCAL_YEAR_NUMBER,
	FISCAL_ISBKCHOLIDAY,
	IS_WORKINGDAY,
	IS_TODAY,
	IS_LAST7DAYS,
	IS_LAST14DAYS,
	IS_LAST30DAYS,
	IS_LAST60DAYS,
	IS_LAST90DAYS,
	IS_NEXT7DAYS,
	IS_NEXT14DAYS,
	IS_NEXT30DAYS,
	IS_NEXT60DAYS,
	IS_NEXT90DAYS,
	IS_PREVWEEK,
	IS_PREV2WEEKS,
	IS_PREV3WEEKS,
	IS_PREV4WEEKS,
	IS_PREV6WEEKS,
	IS_PREV8WEEKS,
	IS_PREV12WEEKS,
	IS_THISWEEK,
	IS_NEXTWEEK,
	IS_NEXT2WEEKS,
	IS_NEXT3WEEKS,
	IS_NEXT4WEEKS,
	IS_NEXT6WEEKS,
	IS_NEXT8WEEKS,
	IS_NEXT12WEEKS,
	IS_THISMONTH,
	IS_PREVMONTH,
	IS_PREV2MONTHS,
	IS_PREV3MONTHS,
	IS_PREV6MONTHS,
	IS_PREV9MONTHS,
	IS_PREV12MONTHS,
	IS_PREV24MONTHS,
	IS_PREV36MONTHS,
	IS_NEXTMONTH,
	IS_NEXT2MONTHS,
	IS_NEXT3MONTHS,
	IS_NEXT6MONTHS,
	IS_NEXT9MONTHS,
	IS_NEXT12MONTHS,
	IS_NEXT24MONTHS,
	IS_NEXT36MONTHS,
	IS_THISQUARTER,
	IS_PREVQUARTER,
	IS_PREV2QUARTERS,
	IS_PREV3QUARTERS,
	IS_PREV4QUARTERS,
	IS_PREV6QUARTERS,
	IS_PREV8QUARTERS,
	IS_PREV12QUARTERS,
	IS_NEXTQUARTER,
	IS_NEXT2QUARTERS,
	IS_NEXT3QUARTERS,
	IS_NEXT4QUARTERS,
	IS_NEXT6QUARTERS,
	IS_NEXT8QUARTERS,
	IS_NEXT12QUARTERS,
	IS_THISYEAR,
	IS_PREVYEAR,
	IS_PREV2YEARS,
	IS_PREV3YEARS,
	IS_PREV4YEARS,
	IS_PREV5YEARS,
	IS_NEXTYEAR,
	IS_NEXT2YEARS,
	IS_NEXT3YEARS,
	IS_NEXT4YEARS,
	IS_NEXT5YEARS
) COMMENT='Master calendar view of all partitions for gregorian & fiscal calendar'
 as
/*
* ---------------------------------------------------------------------------------------------------------
* Created         Created By          Description
* ---------------------------------------------------------------------------------------------------------
* 11/23/2022      Kevin Bailey        Initial creation
*
*/
SELECT   F.CALENDARDATE
        //Calendar date partitions
        ,D.DAYOFWEEK_NUMBER AS CALENDAR_DAYOFWEEK_NUMBER
        ,D.DAYOFMONTH_NUMBER AS CALENDAR_DAYOFMONTH_NUMBER
        ,D.DAYOFQUARTER_NUMBER AS CALENDAR_DAYOFQUARTER_NUMBER
        ,D.DAYOFYEAR_NUMBER AS CALENDAR_DAYOFYEAR_NUMBER
        ,D.WEEK_KEY AS CALENDAR_WEEK_KEY
        ,D.WEEKOFMONTH_NUMBER AS CALENDAR_WEEKOFMONTH_NUMBER
        ,D.WEEKOFQUARTER_NUMBER AS CALENDAR_WEEKOFQUARTER_NUMBER
        ,D.WEEKOFYEAR_NUMBER AS CALENDAR_WEEKOFYEAR_NUMBER
        ,D.WEEK_START AS CALENDAR_WEEK_START
        ,D.WEEK_END AS CALENDAR_WEEK_END
        ,D.MONTH_KEY AS CALENDAR_MONTH_KEY
        ,D.MONTH_NUMBER AS CALENDAR_MONTH_NUMBER
        ,D.MONTH_SHORTNAME AS CALENDAR_MONTH_SHORTNAME
        ,D.MONTH_LONGNAME AS CALENDAR_MONTH_LONGNAME
        ,D.MONTH_START AS CALENDAR_MONTH_START
        ,D.MONTH_END AS CALENDAR_MONTH_END
        ,D.QUARTER_KEY AS CALENDAR_QUARTER_KEY
        ,D.QUARTER_NUMBER AS CALENDAR_QUARTER_NUMBER
        ,D.QUARTER_NAME AS CALENDAR_QUARTER_NAME
        ,D.QUARTER_START AS CALENDAR_QUARTER_START
        ,D.QUARTER_END AS CALENDAR_QUARTER_END
        ,D.YEAR_NUMBER AS CALENDAR_YEAR_NUMBER
        // Fiscal date partitions
        ,F.DAYOFWEEK_NUMBER AS FISCAL_DAYOFWEEK_NUMBER
        ,F.DAYOFPERIOD_NUMBER AS FISCAL_DAYOFPERIOD_NUMBER
        ,F.DAYOFQUARTER_NUMBER AS FISCAL_DAYOFQUARTER_NUMBER
        ,F.DAYOFYEAR_NUMBER AS FISCAL_DAYOFYEAR_NUMBER
        ,F.WEEK_KEY AS FISCAL_WEEK_KEY
        ,F.WEEKOFPERIOD_NUMBER AS FISCAL_WEEKOFPERIOD_NUMBER
        ,F.WEEKOFQUARTER_NUMBER AS FISCAL_WEEKOFQUARTER_NUMBER
        ,F.WEEKOFYEAR_NUMBER AS FISCAL_WEEKOFYEAR_NUMBER
        ,F.WEEK_START AS FISCAL_WEEK_START
        ,F.WEEK_END AS FISCAL_WEEK_END
        ,F.PERIOD_KEY AS FISCAL_PERIOD_KEY
        ,F.PERIOD_NUMBER AS FISCAL_PERIOD_NUMBER
        ,F.PERIOD_START AS FISCAL_PERIOD_START
        ,F.PERIOD_END AS FISCAL_PERIOD_END
        ,F.QUARTER_KEY AS FISCAL_QUARTER_KEY
        ,F.QUARTER_NUMBER AS FISCAL_QUARTER_NUMBER
        ,F.QUARTER_NAME AS FISCAL_QUARTER_NAME
        ,F.QUARTER_START AS FISCAL_QUARTER_START
        ,F.QUARTER_END AS FISCAL_QUARTER_END
        ,F.YEAR_NUMBER AS FISCAL_YEAR_NUMBER
        ,F.ISBKCHOLIDAY AS FISCAL_ISBKCHOLIDAY
        ,CASE
            WHEN ISBKCHOLIDAY = TRUE OR IS_WEEKEND = TRUE THEN FALSE
            ELSE TRUE
         END AS IS_WORKINGDAY
        // Add columns for relative date filtering
        /*** Relative Calendar (& Fiscal) Days ***/
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'day', 'prev', 0 ) IS_TODAY
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'day', 'prev', 7 ) IS_LAST7DAYS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'day', 'prev', 14 ) IS_LAST14DAYS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'day', 'prev', 30 ) IS_LAST30DAYS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'day', 'prev', 60 ) IS_LAST60DAYS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'day', 'prev', 90 ) IS_LAST90DAYS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'day', 'next', 7 ) IS_NEXT7DAYS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'day', 'next', 14 ) IS_NEXT14DAYS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'day', 'next', 30 ) IS_NEXT30DAYS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'day', 'next', 60 ) IS_NEXT60DAYS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'day', 'next', 90 ) IS_NEXT90DAYS
        /*** Relative Calendar Weeks ***/
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'week', 'prev', 1 ) IS_PREVWEEK
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'week', 'prev', 2 ) IS_PREV2WEEKS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'week', 'prev', 3 ) IS_PREV3WEEKS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'week', 'prev', 4 ) IS_PREV4WEEKS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'week', 'prev', 6 ) IS_PREV6WEEKS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'week', 'prev', 8 ) IS_PREV8WEEKS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'week', 'prev', 12 ) IS_PREV12WEEKS
        ,CASE
            WHEN DATE_TRUNC( 'week', CURRENT_DATE() ) = DATE_TRUNC( 'week', CALENDARDATE ) THEN TRUE
            ELSE FALSE
         END AS IS_THISWEEK
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'week', 'next', 1 ) IS_NEXTWEEK
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'week', 'next', 2 ) IS_NEXT2WEEKS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'week', 'next', 3 ) IS_NEXT3WEEKS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'week', 'next', 4 ) IS_NEXT4WEEKS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'week', 'next', 6 ) IS_NEXT6WEEKS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'week', 'next', 8 ) IS_NEXT8WEEKS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'week', 'next', 12 ) IS_NEXT12WEEKS
        /*** Relative Calendar Months ***/
        ,CASE
            WHEN DATE_TRUNC( 'month', CURRENT_DATE() ) = DATE_TRUNC( 'month', CALENDARDATE ) THEN TRUE
            ELSE FALSE
         END AS IS_THISMONTH
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'month', 'prev', 1 ) IS_PREVMONTH
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'month', 'prev', 2 ) IS_PREV2MONTHS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'month', 'prev', 3 ) IS_PREV3MONTHS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'month', 'prev', 6 ) IS_PREV6MONTHS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'month', 'prev', 9 ) IS_PREV9MONTHS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'month', 'prev', 12 ) IS_PREV12MONTHS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'month', 'prev', 24 ) IS_PREV24MONTHS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'month', 'prev', 36 ) IS_PREV36MONTHS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'month', 'next', 1 ) IS_NEXTMONTH
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'month', 'next', 2 ) IS_NEXT2MONTHS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'month', 'next', 3 ) IS_NEXT3MONTHS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'month', 'next', 6 ) IS_NEXT6MONTHS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'month', 'next', 9 ) IS_NEXT9MONTHS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'month', 'next', 12 ) IS_NEXT12MONTHS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'month', 'next', 24 ) IS_NEXT24MONTHS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'month', 'next', 36 ) IS_NEXT36MONTHS
        /*** Relative Calendar Quarters ***/
        ,CASE
            WHEN DATE_TRUNC( 'quarter', CURRENT_DATE() ) = DATE_TRUNC( 'quarter', CALENDARDATE ) THEN TRUE
            ELSE FALSE
         END AS IS_THISQUARTER
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'quarter', 'prev', 1 ) IS_PREVQUARTER
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'quarter', 'prev', 2 ) IS_PREV2QUARTERS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'quarter', 'prev', 3 ) IS_PREV3QUARTERS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'quarter', 'prev', 4 ) IS_PREV4QUARTERS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'quarter', 'prev', 6 ) IS_PREV6QUARTERS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'quarter', 'prev', 8 ) IS_PREV8QUARTERS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'quarter', 'prev', 12 ) IS_PREV12QUARTERS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'quarter', 'next', 1 ) IS_NEXTQUARTER
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'quarter', 'next', 2 ) IS_NEXT2QUARTERS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'quarter', 'next', 3 ) IS_NEXT3QUARTERS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'quarter', 'next', 4 ) IS_NEXT4QUARTERS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'quarter', 'next', 6 ) IS_NEXT6QUARTERS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'quarter', 'next', 8 ) IS_NEXT8QUARTERS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'quarter', 'next', 12 ) IS_NEXT12QUARTERS
        /*** Relative Calendar Years ***/
        ,CASE
            WHEN DATE_TRUNC( 'year', CURRENT_DATE() ) = DATE_TRUNC( 'year', CALENDARDATE ) THEN TRUE
            ELSE FALSE
         END AS IS_THISYEAR
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'year', 'prev', 1 ) IS_PREVYEAR
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'year', 'prev', 2 ) IS_PREV2YEARS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'year', 'prev', 3 ) IS_PREV3YEARS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'year', 'prev', 4 ) IS_PREV4YEARS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'year', 'prev', 5 ) IS_PREV5YEARS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'year', 'next', 1 ) IS_NEXTYEAR
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'year', 'next', 2 ) IS_NEXT2YEARS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'year', 'next', 3 ) IS_NEXT3YEARS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'year', 'next', 4 ) IS_NEXT4YEARS
        ,UTIL_DB.PUBLIC.IS_RELATIVE_N_TIMESLICE( CALENDARDATE, 'year', 'next', 5 ) IS_NEXT5YEARS
FROM    APPLICATION_ENTITY_DB.PUBLIC.AE_DATEDIMS AS D
        INNER JOIN APPLICATION_ENTITY_DB.PUBLIC.AE_FISCALDATEDIMS AS F
            ON D.DATE = F.CALENDARDATE;
